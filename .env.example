##### GENERAL CONFIGURATION #####
# Docker compose project name.
# It will be used as prefix for generated images, running containers, volumes and network names.
COMPOSE_PROJECT_NAME=docker-amp-template

# User ID override for containers with special permission and ownership requirements.
# Most Linux/UNIX systems default to user ID 1000 for the first non-root user.
# Please check the value by running `id` in your shell and adjust the value if required.
PUID=1000

# Group ID override for containers with special permission and ownership requirements.
# Most Linux/UNIX systems default to group ID 1000 for the first non-root user.
# Please check the value by running `id` in your shell and adjust the value if required.
PGID=1000

# Default timezone for all generated and running images.
DEFAULT_TIMEZONE=UTC

# Path of the document root on the host side.
# Please adjust apache and php-fpm service configurations accordingly, if required.
# This includes the apache/vhost.conf too.
DOCUMENT_ROOT_HOST_PATH=../

# Path of the document root inside the containers.
# Please adjust apache and php-fpm service configurations accordingly, if required.
DOCUMENT_ROOT_CONTAINER_PATH=/var/www

# The base Docker image (ubuntu:18.04) does not come with any tzdata preinstalled.
# Choose whether tzdata will be installed during the build process (available options: true for yes, any other value for no).
INSTALL_COMPLETE_TZDATA=true


##### APACHE SERVICE CONFIGURATION #####
# List of system-wide packages which will be installed inside the apache container.
APACHE_SYSTEM_PACKAGES=

# List of apache2 modules which will be enabled inside the apache container (a2enmod).
APACHE_MODULES_ENABLED="mpm_event proxy_fcgi proxy_http rewrite headers"

# List of apache2 modules which will be disabled inside the apache container (a2dismod).
APACHE_MODULES_DISABLED="mpm_prefork mpm_worker"


##### PHP-FPM SERVICE CONFIGURATION #####
# PHP version to install (available options: 5.6, 7.0, 7.1, 7.2, 7.3, 7.4, 8.0, 8.1, 8.2).
PHP_FPM_VERSION=8.1

# List of packages and extensions which will be available inside the php-fpm container.
# Check https://launchpad.net/~ondrej/+archive/ubuntu/php for a complete list of available packages.
# Please make sure to specify the correct version of the PHP packages which are compatible with the chosen PHP_FPM_VERSION value.
# NOTE: Please be advised that the php-json extension has been integrated with PHP8+ and is no longer available as a standalone package for those versions of PHP.
PHP_FPM_SYSTEM_PACKAGES="php8.1-curl php8.1-intl php8.1-mbstring php8.1-mysql php8.1-opcache php8.1-xml git openssh-client php8.1-xdebug php-pear"

# List of PEAR packages which will be available inside the php-fpm container.
# Check https://pear.php.net/packages.php for a complete list of available packages.
PHP_FPM_PEAR_PACKAGES=

# List of PECL packages which will be available inside the php-fpm container.
# Check https://pecl.php.net/packages.php for a complete list of packages.
PHP_FPM_PECL_PACKAGES=

# Install Composer inside the php-fpm container (available options: 0 for no, 1 for yes).
PHP_FPM_COMPOSER_INSTALL=1


##### MARIADB SERVICE CONFIGURATION #####
# MariaDB version to install.
# Check https://hub.docker.com/_/mariadb/tags for a complete list of available versions (tags).
# NOTE: You can use the value 'latest' (no quotes) to install the latest version.
MARIADB_VERSION=10.5.18

# Password for the MariaDB server root user.
MARIADB_ROOT_PASSWORD=db_root_password

# The name of the MariaDB database which will be created automatically during the container build process.
MARIADB_DATABASE=db_name

# The name of the MariaDB user which will be created automatically during the container build process.
MARIADB_USER=db_user

# The password assigned to the created MariaDB user (MARIADB_USER).
MARIADB_PASSWORD=db_password

# Published (exposed) port of the MariaDB service.
# You can use this port to access the MariaDB service externally through MariaDB/MySQL clients.
MARIADB_PUBLISHED_PORT=5001


##### TRAEFIK SERVICE CONFIGURATION #####
# Name of the Traefik Docker container.
TRAEFIK_CONTAINER_NAME=traefik_reverse_proxy

# Port on which Traefik will be listening to for HTTP/TCP requests.
TRAEFIK_HTTP_PORT=80

# Port for accessing Traefik Web UI.
TRAEFIK_WEB_UI_PORT=8080

# Traefik hostname (usually localhost).
TRAEFIK_HOSTNAME=localhost

# Name of the public Docker network that Traefik will use for communication.
TRAEFIK_NETWORK_NAME=traefik_public

# Traefik log level (available options: DEBUG, PANIC, FATAL, ERROR, WARN, INFO).
# https://docs.traefik.io/observability/logs/
TRAEFIK_LOG_LEVEL=ERROR

# Container restart policy (available options: no, always, on-failure, unless-stopped).
# https://docs.docker.com/compose/compose-file/#restart
TRAEFIK_RESTART_POLICY=unless-stopped


##### BACKUP SERVICE CONFIGURATION #####
# Enable or disable backup.
# NOTE: This does not disable the backup service, just running backup scripts in the backup bootstrap script.
BACKUP_ENABLED=true

# Path on the host where all the backups will be stored.
# If the path doesn't exist on the host it will be created and owned byu the root user (use chmod or chown if required).
BACKUP_HOST_PATH=.data/backup

# Enable or disable the backup autocleanup feature.
# If enabled, autocleanup will remove a specified number of oldest backups every time the backup service runs.
BACKUP_AUTOCLEANUP_ENABLED=true

# Maximum age of backups to preserve during backup autocleanup, measured in days.
BACKUP_AUTOCLEANUP_AGE_THRESHOLD=14
